package cudnn

/* Generated by gencudnn. DO NOT EDIT */

// #include <cudnn_v7.h>
import "C"

type ErrQueryMode int

const (
	Rawcode     ErrQueryMode = C.CUDNN_ERRQUERY_RAWCODE
	Nonblocking ErrQueryMode = C.CUDNN_ERRQUERY_NONBLOCKING
	Blocking    ErrQueryMode = C.CUDNN_ERRQUERY_BLOCKING
)

func (e ErrQueryMode) c() C.cudnnErrQueryMode_t { return C.cudnnErrQueryMode_t(e) }

type DataType int

const (
	Float  DataType = C.CUDNN_DATA_FLOAT
	Double DataType = C.CUDNN_DATA_DOUBLE
	Half   DataType = C.CUDNN_DATA_HALF
	Int8   DataType = C.CUDNN_DATA_INT8
	Int32  DataType = C.CUDNN_DATA_INT32
	Int8x4 DataType = C.CUDNN_DATA_INT8x4
)

func (e DataType) c() C.cudnnDataType_t { return C.cudnnDataType_t(e) }

type MathType int

const (
	DefaultMath  MathType = C.CUDNN_DEFAULT_MATH
	TensorOpMath MathType = C.CUDNN_TENSOR_OP_MATH
)

func (e MathType) c() C.cudnnMathType_t { return C.cudnnMathType_t(e) }

type NanPropagation int

const (
	NotPropagateNan NanPropagation = C.CUDNN_NOT_PROPAGATE_NAN
	PropagateNan    NanPropagation = C.CUDNN_PROPAGATE_NAN
)

func (e NanPropagation) c() C.cudnnNanPropagation_t { return C.cudnnNanPropagation_t(e) }

type Determinism int

const (
	NonDeterministic Determinism = C.CUDNN_NON_DETERMINISTIC
	Deterministic    Determinism = C.CUDNN_DETERMINISTIC
)

func (e Determinism) c() C.cudnnDeterminism_t { return C.cudnnDeterminism_t(e) }

type TensorFormat int

const (
	NCHW      TensorFormat = C.CUDNN_TENSOR_NCHW
	NHWC      TensorFormat = C.CUDNN_TENSOR_NHWC
	NCHWVectC TensorFormat = C.CUDNN_TENSOR_NCHW_VECT_C
)

func (e TensorFormat) c() C.cudnnTensorFormat_t { return C.cudnnTensorFormat_t(e) }

type OpTensorOp int

const (
	Add  OpTensorOp = C.CUDNN_OP_TENSOR_ADD
	Mul  OpTensorOp = C.CUDNN_OP_TENSOR_MUL
	Min  OpTensorOp = C.CUDNN_OP_TENSOR_MIN
	Max  OpTensorOp = C.CUDNN_OP_TENSOR_MAX
	Sqrt OpTensorOp = C.CUDNN_OP_TENSOR_SQRT
	Not  OpTensorOp = C.CUDNN_OP_TENSOR_NOT
)

func (e OpTensorOp) c() C.cudnnOpTensorOp_t { return C.cudnnOpTensorOp_t(e) }

type ReduceTensorOp int

const (
	ReduceAdd        ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_ADD
	ReduceMul        ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_MUL
	ReduceMin        ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_MIN
	ReduceMax        ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_MAX
	ReduceAmax       ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_AMAX
	ReduceAvg        ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_AVG
	ReduceNorm1      ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_NORM1
	ReduceNorm2      ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_NORM2
	ReduceMulNoZeros ReduceTensorOp = C.CUDNN_REDUCE_TENSOR_MUL_NO_ZEROS
)

func (e ReduceTensorOp) c() C.cudnnReduceTensorOp_t { return C.cudnnReduceTensorOp_t(e) }

type ReduceTensorIndices int

const (
	ReduceNoIndices        ReduceTensorIndices = C.CUDNN_REDUCE_TENSOR_NO_INDICES
	ReduceFlattenedIndices ReduceTensorIndices = C.CUDNN_REDUCE_TENSOR_FLATTENED_INDICES
)

func (e ReduceTensorIndices) c() C.cudnnReduceTensorIndices_t { return C.cudnnReduceTensorIndices_t(e) }

type IndicesType int

const (
	Indices32 IndicesType = C.CUDNN_32BIT_INDICES
	Indices64 IndicesType = C.CUDNN_64BIT_INDICES
	Indices16 IndicesType = C.CUDNN_16BIT_INDICES
	Indices8  IndicesType = C.CUDNN_8BIT_INDICES
)

func (e IndicesType) c() C.cudnnIndicesType_t { return C.cudnnIndicesType_t(e) }

type ConvolutionMode int

const (
	Convolution      ConvolutionMode = C.CUDNN_CONVOLUTION
	CrossCorrelation ConvolutionMode = C.CUDNN_CROSS_CORRELATION
)

func (e ConvolutionMode) c() C.cudnnConvolutionMode_t { return C.cudnnConvolutionMode_t(e) }

type SoftmaxAlgorithm int

const (
	Fast     SoftmaxAlgorithm = C.CUDNN_SOFTMAX_FAST
	Accurate SoftmaxAlgorithm = C.CUDNN_SOFTMAX_ACCURATE
	Log      SoftmaxAlgorithm = C.CUDNN_SOFTMAX_LOG
)

func (e SoftmaxAlgorithm) c() C.cudnnSoftmaxAlgorithm_t { return C.cudnnSoftmaxAlgorithm_t(e) }

type SoftmaxMode int

const (
	Instance SoftmaxMode = C.CUDNN_SOFTMAX_MODE_INSTANCE
	Channel  SoftmaxMode = C.CUDNN_SOFTMAX_MODE_CHANNEL
)

func (e SoftmaxMode) c() C.cudnnSoftmaxMode_t { return C.cudnnSoftmaxMode_t(e) }

type PoolingMode int

const (
	MaxPooling                 PoolingMode = C.CUDNN_POOLING_MAX
	AverageCountIncludePadding PoolingMode = C.CUDNN_POOLING_AVERAGE_COUNT_INCLUDE_PADDING
	AverageCountExcludePadding PoolingMode = C.CUDNN_POOLING_AVERAGE_COUNT_EXCLUDE_PADDING
	MaxDeterministic           PoolingMode = C.CUDNN_POOLING_MAX_DETERMINISTIC
)

func (e PoolingMode) c() C.cudnnPoolingMode_t { return C.cudnnPoolingMode_t(e) }

type ActivationMode int

const (
	Sigmoid     ActivationMode = C.CUDNN_ACTIVATION_SIGMOID
	ReLU        ActivationMode = C.CUDNN_ACTIVATION_RELU
	Tanh        ActivationMode = C.CUDNN_ACTIVATION_TANH
	ClippedReLU ActivationMode = C.CUDNN_ACTIVATION_CLIPPED_RELU
	Elu         ActivationMode = C.CUDNN_ACTIVATION_ELU
)

func (e ActivationMode) c() C.cudnnActivationMode_t { return C.cudnnActivationMode_t(e) }

type LRNMode int

const (
	CrossChannelDim1 LRNMode = C.CUDNN_LRN_CROSS_CHANNEL_DIM1
)

func (e LRNMode) c() C.cudnnLRNMode_t { return C.cudnnLRNMode_t(e) }

type DivNormMode int

const (
	PrecomputedMeans DivNormMode = C.CUDNN_DIVNORM_PRECOMPUTED_MEANS
)

func (e DivNormMode) c() C.cudnnDivNormMode_t { return C.cudnnDivNormMode_t(e) }

type BatchNormMode int

const (
	PerActivation     BatchNormMode = C.CUDNN_BATCHNORM_PER_ACTIVATION
	Spatial           BatchNormMode = C.CUDNN_BATCHNORM_SPATIAL
	SpatialPersistent BatchNormMode = C.CUDNN_BATCHNORM_SPATIAL_PERSISTENT
)

func (e BatchNormMode) c() C.cudnnBatchNormMode_t { return C.cudnnBatchNormMode_t(e) }

type SamplerType int

const (
	Bilinear SamplerType = C.CUDNN_SAMPLER_BILINEAR
)

func (e SamplerType) c() C.cudnnSamplerType_t { return C.cudnnSamplerType_t(e) }

type RNNMode int

const (
	RNNReLU RNNMode = C.CUDNN_RNN_RELU
	RNNTanh RNNMode = C.CUDNN_RNN_TANH
	LSTM    RNNMode = C.CUDNN_LSTM
	GRU     RNNMode = C.CUDNN_GRU
)

func (e RNNMode) c() C.cudnnRNNMode_t { return C.cudnnRNNMode_t(e) }

type DirectionMode int

const (
	Unidirectional DirectionMode = C.CUDNN_UNIDIRECTIONAL
	Bidirectional  DirectionMode = C.CUDNN_BIDIRECTIONAL
)

func (e DirectionMode) c() C.cudnnDirectionMode_t { return C.cudnnDirectionMode_t(e) }

type RNNInputMode int

const (
	LinearInput RNNInputMode = C.CUDNN_LINEAR_INPUT
	SkipInput   RNNInputMode = C.CUDNN_SKIP_INPUT
)

func (e RNNInputMode) c() C.cudnnRNNInputMode_t { return C.cudnnRNNInputMode_t(e) }

type RNNAlgo int

const (
	Standard       RNNAlgo = C.CUDNN_RNN_ALGO_STANDARD
	PersistStatic  RNNAlgo = C.CUDNN_RNN_ALGO_PERSIST_STATIC
	PersistDynamic RNNAlgo = C.CUDNN_RNN_ALGO_PERSIST_DYNAMIC
)

func (e RNNAlgo) c() C.cudnnRNNAlgo_t { return C.cudnnRNNAlgo_t(e) }

type CTCLossAlgo int

const (
	DeterministicCTCLoss    CTCLossAlgo = C.CUDNN_CTC_LOSS_ALGO_DETERMINISTIC
	NonDeterministicCTCLoss CTCLossAlgo = C.CUDNN_CTC_LOSS_ALGO_NON_DETERMINISTIC
)

func (e CTCLossAlgo) c() C.cudnnCTCLossAlgo_t { return C.cudnnCTCLossAlgo_t(e) }
